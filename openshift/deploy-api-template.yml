# @format

apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: deploy-api-template
objects:
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: slam-api-deployment
      namespace: ${NAMESPACE}
    spec:
      replicas: 1
      selector:
        matchLabels:
          component: slam-api
      template:
        metadata:
          labels:
            component: slam-api
            role: frontend
        spec:
          containers:
            - name: slam-api
              image: ghcr.io/bcgov/slam-api:${TAG}
              ports:
                - containerPort: ${{PORT}}
              env:
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: slam-db
                      key: POSTGRES_USER
                - name: POSTGRES_HOST
                  value: slam-db-service
                - name: POSTGRES_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: slam-db
                      key: POSTGRES_DATABASE
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: slam-db
                      key: POSTGRES_PASSWORD
                - name: POSTGRES_SYNCHRONIZE
                  valueFrom:
                    secretKeyRef:
                      name: slam-db
                      key: POSTGRES_SYNCHRONIZE

  - kind: Service
    apiVersion: v1
    metadata:
      name: slam-api-service
      namespace: '${NAMESPACE}'
    spec:
      type: ClusterIP
      selector:
        component: slam-api
      ports:
        - name: ${PORT}-tcp
          port: ${{PORT}}
          targetPort: ${{PORT}}

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: slam-api-route
      namespace: '${NAMESPACE}'
    spec:
      host: slam-${NAMESPACE}.apps.silver.devops.gov.bc.ca
      path: /api
      to:
        kind: Service
        name: slam-api-service
        weight: 100
      port:
        targetPort: ${PORT}-tcp
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-loadgen-to-frontend
      namespace: ${NAMESPACE}
    spec:
      podSelector:
        matchLabels:
          role: frontend
      ingress:
        - ports:
            - protocol: TCP
              port: 8080
          from:
            - podSelector:
                matchLabels:
                  role: loadgenerator
      policyTypes:
        - Ingress

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-from-openshift-ingress
      namespace: ${NAMESPACE}
    spec:
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector:
        matchLabels:
          role: frontend
      policyTypes:
        - Ingress

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-same-namespace
    spec:
      podSelector:
      ingress:
        - from:
            - podSelector: {}

parameters:
  - name: NAMESPACE
    displayName: Namespace
    required: true
  - name: TAG
    displayName: Tag for github container registry
    required: false
    value: latest
  - name: PORT
    displayName: exposed port
    required: true
